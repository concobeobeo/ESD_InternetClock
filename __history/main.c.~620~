#include <16F887.h>
#device  ADC = 10 *=16
#FUSES HS NOWDT NOBROWNOUT NOLVP
#use delay(CRYSTAL=20M)
#use rs232(UART1)
 
// Define SPI Pins                                                             
#define lcd_sclk  PIN_C3 
#define lcd_sda   PIN_C5             
#define lcd_dc    PIN_D3                     
#define lcd_cs    PIN_A5                                                                            
#define lcd_res   PIN_D2  

// Define orther source files
#include "5110lib\3310(modified).c" 


char buffer[16];
char str[16];

char hr =0, min =0, sec= 0;
char hr1 =buffer[0], hr2=buffer[1], min1=buffer[2], min2=buffer[3], sec1=buffer[4], sec2=buffer[5];
char date, mth, year, day;

int incode;
char* ptr = &buffer;
boolean ready = 0;
char tempd1;
char tempd2;
char tempd3;
int index = 0;

void init()
{
    setup_adc_ports(NO_ANALOGS);
    setup_adc (ADC_OFF) ;
    setup_spi (FALSE);
    setup_uart(115200);
    enable_interrupts(INT_RDA);
    enable_interrupts(GLOBAL);
    enable_interrupts(INT_EXT);
    ext_int_edge(H_TO_L);
    setup_timer_1( T1_INTERNAL | T1_DIV_BY_2);
    Set_timer0(0);
    lcd_init ();
}
//!
//!void time2digit(char hr, char min, char sec, char *hr1, char *hr2, char *min1, char *min2, char *sec1, char *sec2){
//!    *hr1 = hr/10 + 0x30;
//!    *hr2 = hr%10 + 0x30;
//!    *min1 = min/10 + 0x30;
//!    *min2 = min%10 + 0x30;
//!    *sec1 = sec/10 + 0x30;
//!    *sec2 = sec%10+ 0x30;
//!}
//!
//!void time_display(char hr1, char hr2, char min1, char min2, char sec1, char sec2, char x, char y){
//!    if (x>24 || y>4) return;
//!    lcd_print_digit(hr1 -0x30, x, y);
//!    lcd_print_digit(hr2-0x30, x + 12, y);
//!    lcd_print_digit(min1-0x30, x + 24, y);
//!    lcd_print_digit(min2-0x30, x + 36, y);
//!    lcd_print_digit(sec1-0x30, x + 48, y);
//!    lcd_print_digit(sec2-0x30, x + 60, y);
//!}


//!void buzz(){
//!   output_high(PIN_D1);
//!   delay_ms(100);
//!   output_low(PIN_D1);
//!}
//!

#int_rda
void uart_receive(){
   incode = getc();
   sprintf(str, "%d\n", incode);
   printf(str);
   if (incode == '#')
   {  
      ready=true;
      return;
   }
   if (ready){
        if (index<8){
         buffer[index] = incode;
        }
        else{ index =0; ready = false;
        }
//!      switch(index){
//!      case 0: 
//!         hr1 = (char)incode;
//!         index++;
//!         break;
//!      case 1:
//!         hr2 = (char)incode;
//!         index++;
//!         break;
//!      case 2: 
//!         min1 = (char)incode;
//!         index++;
//!         break;
//!      case 3: 
//!         min2 = (char)incode;
//!         index++;
//!         break;
//!      case 4: 
//!         sec1 = (char)incode;
//!         index++;
//!         break;
//!      case 5: 
//!         sec2 = (char)incode;
//!         index++;
//!         break;
//!      case 6 :
//!         date = (char)incode;
//!         index=0;
//!         ready = false;
//!         break;
//!      case 7 :
//!         date = (char)incode;
//!         index= 0;
//!         ready = false;
//!         break;
//!      }
   }
}


char state = 0;
char k;
char l;
char count = 0;
#int_ext
void encoder(){
   if (!state){
       state = 1;
       l = input(PIN_D4);
       k = input(PIN_D5);
       Set_timer1(0);
       if (k)
       {
         count++;
       }
//!       else 
//!       {
//!         count--;
//!       }
       if (count > 3) count = 0;
//!       if (count < 0) count = 1; 
    }
    else {
         if (get_timer1() > 6250){
         state = 0;
         Set_timer1(0);
         }
    }
}


void main()
{
    init(); 
    char cnt;
    WHILE (true)                                        
    { 
         if (cnt!= count) {
            lcd_clear();
            cnt = count;
         }
         if (count == 0){
            lcd_gotoxy(0,0);
            for (char i=0; i<8; i++) lcd_putc(buffer[i]);
//!            lcd_putc(tempd2);
            cnt = count;
         }
         if (count ==  1)
         {
            lcd_clear();
            lcd_putc("Man2");  
            cnt = count;
         }
         if (count == 2)
         {
            lcd_clear();
            lcd_putc("Man3");
            cnt = count;
//!            for (int i=0; i<=sizeof(str);i++) lcd_putc(str[i]);      
         }
         if (count == 3)
         {
            lcd_clear();
            lcd_putc("Man4"); 
            cnt = count;
         }
         delay_ms(300);
      } 
 }
