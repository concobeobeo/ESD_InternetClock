#line 1 "C:/Users/NGUYEN DUY LINH/Desktop/NOKIA5110/5110lib/3310(modified).c"

char CONST TABLE1 [240] = {
 0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x5f,0x00,0x00,
 0x00,0x07,0x00,0x07,0x00,
 0x14,0x7f,0x14,0x7f,0x14,
 0x24,0x2a,0x7f,0x2a,0x12,
 0x23,0x13,0x08,0x64,0x62,
 0x36,0x49,0x55,0x22,0x50,
 0x00,0x05,0x03,0x00,0x00,
 0x00,0x1c,0x22,0x41,0x00,
 0x00,0x41,0x22,0x1c,0x00,
 0x14,0x08,0x3e,0x08,0x14,
 0x08,0x08,0x3e,0x08,0x08,
 0x00,0x50,0x30,0x00,0x00,
 0x08,0x08,0x08,0x08,0x08,
 0x00,0x60,0x60,0x00,0x00,
 0x20,0x10,0x08,0x04,0x02,
 0x3e,0x51,0x49,0x45,0x3e,
 0x00,0x42,0x7f,0x40,0x00,
 0x42,0x61,0x51,0x49,0x46,
 0x21,0x41,0x45,0x4b,0x31,
 0x18,0x14,0x12,0x7f,0x10,
 0x27,0x45,0x45,0x45,0x39,
 0x3c,0x4a,0x49,0x49,0x30,
 0x01,0x71,0x09,0x05,0x03,
 0x36,0x49,0x49,0x49,0x36,
 0x06,0x49,0x49,0x29,0x1e,
 0x00,0x36,0x36,0x00,0x00,
 0x00,0x56,0x36,0x00,0x00,
 0x08,0x14,0x22,0x41,0x00,
 0x14,0x14,0x14,0x14,0x14,
 0x00,0x41,0x22,0x14,0x08,
 0x02,0x01,0x51,0x09,0x06,
 0x32,0x49,0x79,0x41,0x3e,
 0x7e,0x11,0x11,0x11,0x7e,
 0x7f,0x49,0x49,0x49,0x36,
 0x3e,0x41,0x41,0x41,0x22,
 0x7f,0x41,0x41,0x22,0x1c,
 0x7f,0x49,0x49,0x49,0x41,
 0x7f,0x09,0x09,0x09,0x01,
 0x3e,0x41,0x49,0x49,0x7a,
 0x7f,0x08,0x08,0x08,0x7f,
 0x00,0x41,0x7f,0x41,0x00,
 0x20,0x40,0x41,0x3f,0x01,
 0x7f,0x08,0x14,0x22,0x41,
 0x7f,0x40,0x40,0x40,0x40,
 0x7f,0x02,0x0c,0x02,0x7f,
 0x7f,0x04,0x08,0x10,0x7f,
 0x3e,0x41,0x41,0x41,0x3e};

char CONST TABLE2 [240] = {
 0x7f,0x09,0x09,0x09,0x06,
 0x3e,0x41,0x51,0x21,0x5e,
 0x7f,0x09,0x19,0x29,0x46,
 0x46,0x49,0x49,0x49,0x31,
 0x01,0x01,0x7f,0x01,0x01,
 0x3f,0x40,0x40,0x40,0x3f,
 0x1f,0x20,0x40,0x20,0x1f,
 0x3f,0x40,0x38,0x40,0x3f,
 0x63,0x14,0x08,0x14,0x63,
 0x07,0x08,0x70,0x08,0x07,
 0x61,0x51,0x49,0x45,0x43,
 0x00,0x7f,0x41,0x41,0x00,
#line 66 "C:/Users/NGUYEN DUY LINH/Desktop/NOKIA5110/5110lib/3310(modified).c"
 0x02,0x04,0x08,0x10,0x20,
 0x04,0x02,0x01,0x02,0x04,
 0x40,0x40,0x40,0x40,0x40,
 0x00,0x01,0x02,0x04,0x00,
 0x20,0x54,0x54,0x54,0x78,
 0x7f,0x48,0x44,0x44,0x38,
 0x38,0x44,0x44,0x44,0x20,
 0x38,0x44,0x44,0x48,0x7f,
 0x38,0x54,0x54,0x54,0x18,
 0x08,0x7e,0x09,0x01,0x02,
 0x0c,0x52,0x52,0x52,0x3e,
 0x7f,0x08,0x04,0x04,0x78,
 0x00,0x44,0x7d,0x40,0x00,
 0x20,0x40,0x44,0x3d,0x00,
 0x7f,0x10,0x28,0x44,0x00,
 0x00,0x41,0x7f,0x40,0x00,
 0x7c,0x04,0x18,0x04,0x78,
 0x7c,0x08,0x04,0x04,0x78,
 0x38,0x44,0x44,0x44,0x38,
 0x7c,0x14,0x14,0x14,0x08,
 0x08,0x14,0x14,0x18,0x7c,
 0x7c,0x08,0x04,0x04,0x08,
 0x48,0x54,0x54,0x54,0x20,
 0x04,0x3f,0x44,0x40,0x20,
 0x3c,0x40,0x40,0x20,0x7c,
 0x1c,0x20,0x40,0x20,0x1c,
 0x3c,0x40,0x30,0x40,0x3c,
 0x44,0x28,0x10,0x28,0x44,
 0x0c,0x50,0x50,0x50,0x3c,
 0x44,0x64,0x54,0x4c,0x44,
 0x00,0x08,0x36,0x41,0x00,
 0x00,0x00,0x7f,0x00,0x00,
 0x00,0x41,0x36,0x08,0x00,
 0x10,0x08,0x08,0x10,0x08,
 0x78,0x46,0x41,0x46,0x78};







void nokia_init();
void nokia_write_command(char bytefornokia_command);
void nokia_write_data(char bytefornokia_data);
void nokia_write_dorc(char bytefornokia);
void nokia_gotoxy(char xnokia, char ynokia);
void nokia_contrast (byte contrast);
void nokia_printchar(char cvar);
void nokia_printchar_inverted(char cvar);
void nokia_clean_ddram();
void table_to_nokialcd();
void table_to_nokialcd_inverted();
void LcdPixel (char x, char y);

char char_row,charsel,charpos,chardata;
int16 ddram;

void nokia_init() {
 output_high(lcd_dc);
 output_high(lcd_cs);
 delay_us(200);

 output_low(lcd_res);
 delay_ms(50);
 output_high(lcd_res);

 nokia_write_command(0x21);
 nokia_write_command(0xc8);
 nokia_write_command(0x12);
 nokia_write_command(0x20);

 nokia_write_command(0x09);

 delay_ms(50);

 nokia_clean_ddram();

 delay_ms(10);

 nokia_write_command(0x08);
 delay_ms(10);

 nokia_write_command(0x0c);
}

void nokia_clean_ddram() {
 nokia_gotoxy(0,0);
 for (ddram=504; ddram>0; ddram--)
 nokia_write_data(0x00);
}

void nokia_write_command(char bytefornokia_command)
{
 output_low(lcd_dc);
 output_low(lcd_cs);
 delay_us(2);
 nokia_write_dorc(bytefornokia_command);
 output_high(lcd_cs);
 delay_us(2);
}

void nokia_write_data(char bytefornokia_data)
{
 output_high(lcd_dc);
 output_low(lcd_cs);
 delay_us(2);
 nokia_write_dorc(bytefornokia_data);
 output_high(lcd_cs);
 delay_us(2);
}

void nokia_write_dorc(char bytefornokia) {
 char caa;
 for (caa=8;caa>0;caa--)
 {
 output_low(lcd_sclk);
 delay_us(2);
 output_bit(lcd_sda,(bytefornokia&0x80));
 output_high(lcd_sclk);
 delay_us(2);
 bytefornokia = bytefornokia << 1;
 }
}

void nokia_gotoxy(char xnokia, char ynokia) {
 nokia_write_command(0x40|(ynokia&0x07));
 nokia_write_command(0x80|(xnokia&0x7f));
}

void nokia_contrast (char contrast) {
 nokia_write_command(0x21);
 nokia_write_command(0x80 | contrast);
 nokia_write_command(0x20);
}

void nokia_printchar(char cvar) {
 charsel=cvar;
 table_to_nokialcd();
}
void nokia_printchar_inverted(char cvar) {
 charsel=cvar;
 table_to_nokialcd_inverted();
}
void table_to_nokialcd() {
 if (charsel<0x20) return;
 if (charsel>0x7f) return;

 for (char_row=0;char_row<5;char_row++)
 {
 if (charsel<0x50){charpos=(((charsel&0xff)-0x20)*5);chardata=TABLE1[(charpos+char_row)];}
 if (charsel>0x4f){charpos=(((charsel&0xff)-0x50)*5);chardata=TABLE2[(charpos+char_row)];}

 nokia_write_data(chardata);
 }
 nokia_write_data(0x00);
}
void table_to_nokialcd_inverted() {
 if (charsel<0x20) return;
 if (charsel>0x7f) return;

 for (char_row=0;char_row<5;char_row++)
 {
 if (charsel<0x50){charpos=(((charsel&0xff)-0x20)*5);chardata=TABLE1[(charpos+char_row)];}
 if (charsel>0x4f){charpos=(((charsel&0xff)-0x50)*5);chardata=TABLE2[(charpos+char_row)];}

 nokia_write_data(~chardata);
 }
 nokia_write_data(0xff);
}
void LcdPixel (char x, char y) {
 char offset;
 byte data;

 if (x > 84) return;
 if (y > 48) return;

 offset = y % 8;
 data = (0x01<<offset);

 nokia_gotoxy(x, (y/8));
 nokia_write_data(data);
}
